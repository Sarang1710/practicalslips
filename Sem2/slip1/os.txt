Q.1 Write a C program to implement the following unix/linux command.
ls â€“l > list.tx

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>

int main(int argc, char *argv[]) {
    int pid, fd;

    // Open the output file
    fd = open("list.txt", O_CREAT | O_WRONLY | O_TRUNC, 0666);
    if (fd < 0) {
        perror("open");
        exit(1);
    }

    // Fork a new process
    pid = fork();

    if (pid < 0) {
        perror("fork");
        exit(1);
    }
    else if (pid == 0) {
        // Child process: redirect stdout to the output file
        dup2(fd, STDOUT_FILENO);

        // Execute the "ls -l" command
        execlp("ls", "ls", "-l", NULL);

        // If execlp returns, there was an error
        perror("execlp");
        exit(1);
    }
    else {
        // Parent process: wait for the child to finish
        waitpid(pid, NULL, 0);

        // Close the output file
        close(fd);
    }

    return 0;
}